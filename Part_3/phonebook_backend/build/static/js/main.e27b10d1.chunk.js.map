{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","errorMessage","successMessage","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","setErrorMessage","setSuccessMessage","useEffect","personsService","initialPersons","filteredPersons","person","name","toLowerCase","startsWith","onChange","event","target","value","onSubmit","preventDefault","personObject","number","findPerson","find","undefined","window","confirm","returnedPerson","map","newPerson","concat","setTimeout","type","key","onClick","catch","error","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e27b10d1.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ errorMessage, successMessage }) => {\r\n  if (successMessage === null && errorMessage === null) {\r\n    return null;\r\n  } else if (successMessage !== null) {\r\n    return <div className=\"success\">{successMessage}</div>;\r\n  }\r\n\r\n  return <div className=\"error\">{errorMessage}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport personsService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  useEffect(() => {\n    personsService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    const findPerson = persons.find((person) => person.name === newName);\n    if (findPerson !== undefined) {\n      const updatePerson = window.confirm(\n        `${findPerson.name} already exists, replace the old number with a new one?`\n      );\n      if (updatePerson) {\n        personsService\n          .update(findPerson.id, personObject)\n          .then((returnedPerson) =>\n            setPersons(\n              persons.map((person) =>\n                person.id !== findPerson.id ? person : returnedPerson\n              )\n            )\n          );\n      }\n    } else {\n      personsService.create(personObject).then((newPerson) => {\n        setPersons(persons.concat(newPerson));\n        setSuccessMessage(`${newPerson.name} was added to the server`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n      });\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const filteredPersons = persons.filter((person) =>\n    person.name.toLowerCase().startsWith(filter.toLowerCase())\n  );\n\n  const deletePerson = (id) => {\n    let person = persons.find((person) => person.id === id);\n    let confirm = window.confirm(`Delete ${person.name} ?`);\n    if (confirm) {\n      personsService\n        .remove(id)\n        .then((response) =>\n          setPersons(persons.filter((person) => person.id !== id))\n        )\n        .catch((error) => {\n          setErrorMessage(`${person.name} was already deleted from the server`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        errorMessage={errorMessage}\n        successMessage={successMessage}\n      />\n      <div>\n        filter shown with <input onChange={handleFilterChange} value={filter} />\n      </div>\n      <h2>add a new</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input onChange={handleNameChange} value={newName} />\n        </div>\n        <div>\n          number: <input onChange={handleNumberChange} value={newNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {filteredPersons.map((person) => (\n        <p key={person.id}>\n          {person.name} {person.number}{\" \"}\n          <button onClick={() => deletePerson(person.id)}>delete</button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}